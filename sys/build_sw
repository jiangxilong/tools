eval 'exec `which perl` -S $0 ${1+"$@"}'
   if 0;

#/**********************************************************************/
#/*                                                                    */
#/*             -------                                                */
#/*            /   SOC  \                                              */
#/*           /    GEN   \                                             */
#/*          /    TOOL    \                                            */
#/*          ==============                                            */
#/*          |            |                                            */
#/*          |____________|                                            */
#/*                                                                    */
#/*                                                                    */
#/*                                                                    */
#/*  Author(s):                                                        */
#/*      - John Eaton, jt_eaton@opencores.org                          */
#/*                                                                    */
#/**********************************************************************/
#/*                                                                    */
#/*    Copyright (C) <2010-2013>  <Ouabache Design Works>              */
#/*                                                                    */
#/*  This source file may be used and distributed without              */
#/*  restriction provided that this copyright statement is not         */
#/*  removed from the file and that any derivative work contains       */
#/*  the original copyright notice and the associated disclaimer.      */
#/*                                                                    */
#/*  This source file is free software; you can redistribute it        */
#/*  and/or modify it under the terms of the GNU Lesser General        */
#/*  Public License as published by the Free Software Foundation;      */
#/*  either version 2.1 of the License, or (at your option) any        */
#/*  later version.                                                    */
#/*                                                                    */
#/*  This source is distributed in the hope that it will be            */
#/*  useful, but WITHOUT ANY WARRANTY; without even the implied        */
#/*  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR           */
#/*  PURPOSE.  See the GNU Lesser General Public License for more      */
#/*  details.                                                          */
#/*                                                                    */
#/*  You should have received a copy of the GNU Lesser General         */
#/*  Public License along with this source; if not, download it        */
#/*  from http://www.opencores.org/lgpl.shtml                          */
#/*                                                                    */
#/**********************************************************************/


############################################################################
# General PERL config
############################################################################
use Getopt::Long;
use English;
use File::Basename;
use Cwd;
use XML::LibXML;
use lib './tools';
use sys::lib;
use yp::lib;

$OUTPUT_AUTOFLUSH = 1; # set autoflush of stdout to TRUE.

############################################################################
### Process the options
############################################################################
Getopt::Long::config("require_order", "prefix=-");
GetOptions("h","help",
) || die "(use '$program_name -h' for help)";


##############################################################################
## Help option
##############################################################################
if ( $opt_h or $opt_help  ) 
  { print "\n build_sw vendor__component  worksite";
    print "\n";
    exit 1;
  }


#/**********************************************************************/
#/*  Process each library by finding any ip-xact file in any component */
#/*                                                                    */
#/*  Each ip-xact file is parsed and it's filename and the names of any*/
#/*  modules that it uses are saved.                                   */
#/*                                                                    */
#/*                                                                    */
#/**********************************************************************/



my $home = cwd();

my $vendor;
my $library;




$_ =              $ARGV[0];
my $work_site =   yp::lib::get_workspace();
   $work_site =   "/${work_site}" ;



if(/(\S+)__(\S+)/) 
     { 
     $vendor       = $1;
     $library      = $2;
     }

my $parser = XML::LibXML->new();


my      @kids          = (  );
my      @filelist      = (  );


my @components   = yp::lib::find_components($vendor,$library);

foreach my $component (@components) 
   {

   my $socgen_filename     = yp::lib::find_componentConfiguration($vendor,$library,$component);

   if($socgen_filename)
   {


   my $socgen_file     = $parser->parse_file($socgen_filename);



   #/*********************************************************************************************/
   #/   files for simulation                                                                     */
   #/                                                                                            */
   #/*********************************************************************************************/




   foreach  my   $i_name ($socgen_file->findnodes("//socgen:codeSets/socgen:codeSet/socgen:name"))
      {
      my $codeSet_name        = $i_name ->findnodes('./text()')->to_literal ;
      my $codeSet_vendor      = $i_name ->findnodes('../socgen:vendor/text()')->to_literal ;
      my $codeSet_library     = $i_name ->findnodes('../socgen:library/text()')->to_literal ;
      my $codeSet_component   = $i_name ->findnodes('../socgen:component/text()')->to_literal ;
      my $codeSet_version     = $i_name ->findnodes('../socgen:version/text()')->to_literal ;

      print "$codeSet_name  $codeSet_vendor $codeSet_library $codeSet_component  $codeSet_version  \n ";

     $cmd ="./tools/sys/build_generate -prefix ${work_site} -vendor ${codeSet_vendor} -library ${codeSet_library}   -component  ${codeSet_component}  -version ${codeSet_version}    \n";
     if (system($cmd)) {}
     



      }

}

}